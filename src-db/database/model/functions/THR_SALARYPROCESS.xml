<?xml version="1.0"?>
  <database name="FUNCTION THR_SALARYPROCESS">
    <function name="THR_SALARYPROCESS" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2001-2009 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  V_LEAVEAPPDETAILS_ID VARCHAR2(32);
  V_LEAVEAPPROVE_ID VARCHAR2(32);
  V_LEAVEAPPROVEDETAIL_ID VARCHAR2(32);
  V_COUNT NUMBER:=0;
  --------------
  V_YEAR NUMBER:=0;
  V_MONTHID NUMBER:=0;
  V_MDAYS NUMBER:=1;
  V_WDAYS NUMBER:=1;
  V_PAYDAYS NUMBER:=0;
  V_NOD NUMBER:=0;
   v_Result NUMBER:=1; -- 0=failure
  v_Message VARCHAR2(2000):='';

  CUR_PARAMETER_EMP RECORD;
  CUR_PARAMETER_EMP_ITEM RECORD;

  ------------
  V_EMPL_SAL_PERD_EMP_ID VARCHAR2(32);
  V_EMPL_SAL_PERD_ITEM_ID VARCHAR2(32);

  V_ISACTIVE VARCHAR(1):='Y';
   V_TOT_EARNINGS NUMBER:=0;
   V_TOT_DEDUCTIONS NUMBER:=0;
   V_TOT_PAIDAMT NUMBER:=0;
   V_TOT_LOPDAYS NUMBER:=0;
   V_TOT_LOPAMT NUMBER:=0;
   V_OTAMT NUMBER:=0;
   V_HOTAMT NUMBER:=0;
   V_DAYSWORKED NUMBER:=0;
   V_NOOFHOLIDAYS NUMBER;
   V_LEAVEDAYS NUMBER:=0;
   V_NOOFWEEKENDS NUMBER:=0;
   V_LOANAMT NUMBER:=0;
   V_OTIME NUMBER:=0;
   V_HOTIME NUMBER:=0;
   V_HLATE NUMBER:=0;
   V_EMPL_SAL_PERIOD_ID VARCHAR2(32);
   -----------
   V_AMTPERMONTH NUMBER:=0;
   V_LATE NUMBER:=0;
V_LOPDAYS NUMBER:=0;
   ------------------------------
   V_EARNINGS NUMBER:=0;
   V_DEDUCTIONS NUMBER:=0;
   V_PAIDAMT NUMBER:=0;
   ----------------------------------
   v_emp_company_expenses NUMBER:=0;
   v_emp_combo NUMBER:=0; 
      v_combo NUMBER:=0; 
V_COUNT_EMP NUMBER:=0; 
--V_PERIOD_ID VARCHAR(32):='A365F4E1EF324E4B8B0ED548BE52C196';
v_period_id VARCHAR(32):=0;
V_THR_EMPL_SAL_PERIOD_ID VARCHAR(32):=0;
v_fromdate DATE ;
v_todate DATE;
Cur_Parameter RECORD;
v_Record_ID VARCHAR2(32);
v_ResultStr VARCHAR2(2000):='';
  v_User_ID VARCHAR2(32):='0';

   /*Testing Scripts-----------------

   select * from thr_empl_sal_period

   "0C150BC331DD4136A90663655F48833C"
   End Testing Script----------------*/
BEGIN
 DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
  v_ResultStr:='PInstanceNotFound';
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
BEGIN


v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID, i.AD_User_ID, i.AD_Client_ID, i.AD_Org_ID,
        p.ParameterName, p.P_String, p.P_Number, p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo) LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_User_ID:=Cur_Parameter.AD_User_ID;
    END LOOP; -- Get Parameter

select c_period_id,fromdate,todate into V_PERIOD_ID,v_fromdate,v_todate  
from thr_empl_sal_period 
where thr_empl_sal_period_id=v_Record_ID;

SELECT P_YEAR, P_MONTHID, P_MDAYS INTO V_YEAR, V_MONTHID, V_MDAYS FROM THR_GET_MONTHDAYS (V_PERIOD_ID);
EXCEPTION
WHEN OTHERS THEN
V_MDAYS:=30;
END;     
-------------HOLIDAYS---------------------------------
 SELECT COUNT(1)  
INTO V_NOOFWEEKENDS 
FROM THR_EMPL_HLDY_REL D, thr_empl_hlday_yr Y
WHERE Y.thr_empl_hlday_yr_ID=D.thr_empl_hlday_yr_ID
AND REPEATOPTION='1'
AND d.is_partial='N'
AND HOLIDATE BETWEEN v_fromdate AND v_todate;

SELECT COUNT(1)  
INTO V_NOOFHOLIDAYS 
FROM THR_EMPL_HLDY_REL D, thr_empl_hlday_yr Y
WHERE Y.thr_empl_hlday_yr_ID=D.thr_empl_hlday_yr_ID
AND REPEATOPTION='2'
AND HOLIDATE BETWEEN v_fromdate AND v_todate;


     SELECT COUNT(1)
     INTO V_COUNT_EMP
    FROM THR_EMPL_SAL_PERD_EMP
     WHERE THR_EMPL_SAL_PERIOD_ID=v_Record_ID;




IF COALESCE(V_COUNT_EMP,0)=0 THEN

V_EARNINGS :=0;
   V_DEDUCTIONS :=0;
   V_PAIDAMT :=0;
   v_emp_company_expenses:=0;
   v_emp_combo:=0;

FOR CUR_PARAMETER_EMP IN
     (SELECT E.* FROM THR_EMPL_SALARY S, THR_EMPL_INFO E
WHERE S.THR_EMPL_INFO_ID=E.THR_EMPL_INFO_ID 
AND E.DATE_OF_JOINING<=v_todate
AND ((DATE_OF_LEAVING IS NULL) OR E.DATE_OF_LEAVING>v_todate)
AND E.ISACTIVE='Y'
AND S.ISACTIVE='Y'
)
      LOOP

  V_EMPL_SAL_PERD_EMP_ID:=GET_UUID();


INSERT INTO THR_EMPL_SAL_PERD_EMP(
THR_EMPL_SAL_PERD_EMP_ID,AD_CLIENT_ID,AD_ORG_ID,ISACTIVE,
created,createdby,updated,UPDATEDBY,
C_PERIOD_ID,THR_EMPL_INFO_ID,
TOT_EARNINGS,TOT_DEDUCTIONS,TOT_PAIDAMT,TOT_LOPDAYS,TOT_LOPAMT,OTAMT,DAYSWORKED,NOOFHOLIDAYS,LEAVEDAYS,
NOOFWEEKENDS,LOANAMT,OTIME,
THR_EMPL_SAL_PERIOD_ID,EMP_POSITION,EMP_DEPARTMENT, 
earnings,company_expenses ,hourly_amount ,is_hourly
)
VALUES (
V_EMPL_SAL_PERD_EMP_ID,CUR_PARAMETER_EMP.AD_CLIENT_ID,CUR_PARAMETER_EMP.AD_ORG_ID,CUR_PARAMETER_EMP.ISACTIVE,
now(),'100',now(),'100',
V_PERIOD_ID,CUR_PARAMETER_EMP.THR_EMPL_INFO_ID,
V_TOT_EARNINGS,V_TOT_DEDUCTIONS,V_TOT_PAIDAMT,V_TOT_LOPDAYS,V_TOT_LOPAMT,V_OTAMT,V_DAYSWORKED,V_NOOFHOLIDAYS,V_LEAVEDAYS,
V_NOOFWEEKENDS,V_LOANAMT,V_OTIME,
v_Record_ID,CUR_PARAMETER_EMP.THR_EM_DESIGNATION_ID,CUR_PARAMETER_EMP.THR_EM_DEPARTMENT_ID,
V_EARNINGS,v_emp_company_expenses,0,'N');

V_TOT_EARNINGS:=0;
   V_TOT_DEDUCTIONS :=0;
   V_TOT_PAIDAMT :=0;
   v_emp_company_expenses:=0;
   V_LOPDAYS :=0;
   
v_combo :=0;
V_OTIME:=0;



FOR CUR_PARAMETER_EMP_ITEM IN
(SELECT i.*,s.grossamt FROM THR_EMPL_PAY_ITEM as i, thr_empl_salary as s WHERE 
S.thr_empl_salary_ID=I.thr_empl_salary_ID
AND s.THR_EMPL_INFO_ID=CUR_PARAMETER_EMP.THR_EMPL_INFO_ID) LOOP

V_EMPL_SAL_PERD_ITEM_ID=GET_UUID();
v_combo :=0;

----------Start Addition-------------------
IF CUR_PARAMETER_EMP_ITEM.TYPE='Addition' THEN

	IF CUR_PARAMETER_EMP_ITEM.is_fixed='Y' THEN
		V_TOT_EARNINGS:=COALESCE(V_TOT_EARNINGS,0)+COALESCE(CUR_PARAMETER_EMP_ITEM.AMTPERMONTH,0);
	ELSE
		SELECT SUM(AMTPERMONTH) INTO v_combo 
		FROM THR_EMPL_PAY_ITEM as i, thr_empl_salary as s  
		WHERE s.thr_empl_salary_id=i.thr_empl_salary_ID 
		AND category in (
		select category from THR_EMPL_PAYCOMBOLINE 
		where THR_EMPL_PAYCOMBO_ID=CUR_PARAMETER_EMP_ITEM.THR_EMPL_PAYCOMBO_ID)
		and s.THR_EMPL_INFO_ID=CUR_PARAMETER_EMP.THR_EMPL_INFO_ID
		;

		V_TOT_EARNINGS:=COALESCE(V_TOT_EARNINGS,0)+COALESCE(v_combo,0)*COALESCE(CUR_PARAMETER_EMP_ITEM.PERCENTAGE,0)/100;
		v_emp_combo:=COALESCE(v_emp_combo,0)+COALESCE(v_combo,0);
	END IF;
END IF;

----------Start Deduction-------------------

IF CUR_PARAMETER_EMP_ITEM.TYPE='Deduction' THEN
	IF CUR_PARAMETER_EMP_ITEM.is_fixed='Y' THEN
		V_TOT_DEDUCTIONS:=COALESCE(V_TOT_DEDUCTIONS,0)+COALESCE(CUR_PARAMETER_EMP_ITEM.AMTPERMONTH,0);
	ELSE

		SELECT SUM(AMTPERMONTH) INTO v_combo 
		FROM THR_EMPL_PAY_ITEM as i, thr_empl_salary as s  
		WHERE s.thr_empl_salary_id=i.thr_empl_salary_ID 
		AND category in (
		select category from THR_EMPL_PAYCOMBOLINE 
		where THR_EMPL_PAYCOMBO_ID=CUR_PARAMETER_EMP_ITEM.THR_EMPL_PAYCOMBO_ID)
		and s.THR_EMPL_INFO_ID=CUR_PARAMETER_EMP.THR_EMPL_INFO_ID
		;
			
		v_combo:=COALESCE(v_combo,0)*COALESCE(CUR_PARAMETER_EMP_ITEM.PERCENTAGE,0)/100;
		V_TOT_DEDUCTIONS:=COALESCE(V_TOT_DEDUCTIONS,0)+COALESCE(v_combo,0);
		v_emp_combo:=COALESCE(v_emp_combo,0)+COALESCE(v_combo,0);
		
	END IF;

END IF;
----------End Deduction-------------------
----------Start Company_Expenses-------------------
IF CUR_PARAMETER_EMP_ITEM.TYPE='Company_Expenses' THEN
	IF CUR_PARAMETER_EMP_ITEM.is_fixed='Y' THEN
		v_emp_company_expenses:=COALESCE(v_emp_company_expenses,0)+COALESCE(CUR_PARAMETER_EMP_ITEM.AMTPERMONTH,0);
	ELSE
		SELECT SUM(AMTPERMONTH) INTO v_combo 
		FROM THR_EMPL_PAY_ITEM as i, thr_empl_salary as s  
		WHERE s.thr_empl_salary_id=i.thr_empl_salary_ID 
		AND category in (
		select category from THR_EMPL_PAYCOMBOLINE 
		where THR_EMPL_PAYCOMBO_ID=CUR_PARAMETER_EMP_ITEM.THR_EMPL_PAYCOMBO_ID)
		and s.THR_EMPL_INFO_ID=CUR_PARAMETER_EMP.THR_EMPL_INFO_ID
		;
		
		
		v_combo:=COALESCE(v_combo,0)*COALESCE(CUR_PARAMETER_EMP_ITEM.PERCENTAGE,0)/100;
		v_emp_company_expenses:=COALESCE(v_emp_company_expenses,0)+COALESCE(v_combo,0);
		v_emp_combo:=COALESCE(v_emp_combo,0)+COALESCE(v_combo,0);
	
	END IF;

END IF;
----------End Company_Expenses-------------------

--- Start -- Hourly--------------
IF CUR_PARAMETER_EMP_ITEM.TYPE='Hourly' THEN

	IF CUR_PARAMETER_EMP_ITEM.is_fixed='Y' THEN
		V_OTAMT:=COALESCE(V_OTAMT,0)+COALESCE(CUR_PARAMETER_EMP_ITEM.AMTPERMONTH,0);
	ELSE

		SELECT SUM(AMTPERMONTH) INTO v_combo 
		FROM THR_EMPL_PAY_ITEM as i, thr_empl_salary as s  
		WHERE s.thr_empl_salary_id=i.thr_empl_salary_ID 
		AND category in (
		select category from THR_EMPL_PAYCOMBOLINE 
		where THR_EMPL_PAYCOMBO_ID=CUR_PARAMETER_EMP_ITEM.THR_EMPL_PAYCOMBO_ID)
		and s.THR_EMPL_INFO_ID=CUR_PARAMETER_EMP.THR_EMPL_INFO_ID
		;
		v_combo:=COALESCE(v_combo,0)*COALESCE(CUR_PARAMETER_EMP_ITEM.PERCENTAGE,0)/100;
		V_OTAMT:=COALESCE(V_OTAMT,0)+COALESCE(v_combo,0);
		v_emp_combo:=COALESCE(v_emp_combo,0)+COALESCE(v_combo,0);
		--V_OTAMT:=COALESCE(V_OTAMT,0)+COALESCE(v_combo,0)*COALESCE(CUR_PARAMETER_EMP_ITEM.PERCENTAGE,0)/100;
	END IF;
	----------------------Holiday Over Time ------------------------------------------------------------------
	


	IF CUR_PARAMETER_EMP_ITEM.CATEGORY='Holiday Over Time' THEN

	select SUM(over_time), SUM(LATE) INTO V_OTIME , V_LATE from thr_em_attn_proc att, thr_empl_hlday_plandel hpd
		WHERE attendance_date between v_fromdate and v_todate
		AND ATT.THR_Empl_Info_ID=CUR_PARAMETER_EMP.THR_Empl_Info_ID
		AND ATT.THR_Empl_Info_ID=HPD.THR_Empl_Info_ID
		AND ATT.attendance_date=HPD.HOLy_DATE;
		
	ELSE
	select SUM(over_time), SUM(LATE) INTO V_OTIME , V_LATE from thr_em_attn_proc
		WHERE attendance_date between v_fromdate and v_todate
		AND THR_Empl_Info_ID=CUR_PARAMETER_EMP.THR_Empl_Info_ID;

	END IF;

	
	   ---------------- Over Time and Over Time Amount ------------

		


		--Holiday Over Time

	-----------------------------------------------------------


END IF;

IF COALESCE(V_OTIME,0)=0 THEN
V_OTIME:=1;
END IF;

--- End -- Hourly--------------
V_AMTPERMONTH:=v_combo;
if COALESCE(v_combo,0)=0 THEN
V_AMTPERMONTH:=CUR_PARAMETER_EMP_ITEM.AMTPERMONTH;
END IF;
INSERT INTO THR_EMPL_SAL_PERD_ITEM(
THR_EMPL_SAL_PERD_ITEM_ID,AD_CLIENT_ID,AD_ORG_ID,ISACTIVE,THR_EMPL_SAL_PERD_EMP_ID,AMTPERMONTH,THR_EMPL_PAY_ITEM_ID,createdby, UPDATEDBY)
VALUES (
V_EMPL_SAL_PERD_ITEM_ID,CUR_PARAMETER_EMP.AD_CLIENT_ID,CUR_PARAMETER_EMP.AD_ORG_ID,CUR_PARAMETER_EMP.ISACTIVE,V_EMPL_SAL_PERD_EMP_ID,COALESCE(V_AMTPERMONTH,0)*COALESCE(V_OTIME,1),CUR_PARAMETER_EMP_ITEM.THR_EMPL_PAY_ITEM_ID,'100','100');

V_OTIME:=0;
V_LATE :=0;
END LOOP;

V_TOT_PAIDAMT:=COALESCE(V_TOT_EARNINGS,0)-COALESCE(V_TOT_DEDUCTIONS,0);

V_EARNINGS:=COALESCE(V_EARNINGS,0)+COALESCE(V_TOT_EARNINGS,0);

V_DEDUCTIONS:=COALESCE(V_DEDUCTIONS,0)+COALESCE(V_TOT_DEDUCTIONS,0);
---------------------_Calculate LOP Amount -------------------- Start --------------


select COUNT(a.*) 
INTO V_LOPDAYS 
FROM thr_empl_lv_appr a, thr_empl_leave_type t
WHERE a.thr_empl_leave_type_id=t.thr_empl_leave_type_id
AND a.leavedate between v_fromdate and v_todate
AND T.SHORT_NAME='LOP'
AND a.THR_Empl_Info_ID=CUR_PARAMETER_EMP.THR_Empl_Info_ID;


		--IF CUR_PARAMETER_EMP_ITEM.is_fixed='Y' THEN
		V_TOT_LOPAMT:=(COALESCE(V_TOT_EARNINGS,0)*COALESCE(V_LOPDAYS,0))/COALESCE(v_mdays,1);
		--ELSE
		--SELECT SUM(AMTPERMONTH) INTO v_combo FROM THR_EMPL_PAY_ITEM as i WHERE category in (
		--select category from THR_EMPL_PAYCOMBOLINE where THR_EMPL_PAYCOMBO_ID=CUR_PARAMETER_EMP_ITEM.THR_EMPL_PAYCOMBO_ID);

		--V_TOT_LOPAMT:=COALESCE(V_TOT_LOPAMT,0)+
		--COALESCE(v_combo,0)*(COALESCE(CUR_PARAMETER_EMP_ITEM.PERCENTAGE,0)/100);
		--END IF;

---------------------_Calculate LOP Amount -------------------- End --------------






------------------Leave Days -------------------------------

select COUNT(1) 
INTO V_LEAVEDAYS 
FROM thr_empl_lv_appr a, thr_empl_leave_type t
WHERE a.thr_empl_leave_type_id=t.thr_empl_leave_type_id
AND  a.leavedate between v_fromdate and v_todate
AND T.SHORT_NAME<>'LOP'
AND a.THR_Empl_Info_ID=CUR_PARAMETER_EMP.THR_Empl_Info_ID;

-------------Loan Schedule ----------------------------------
select SUM(D.DUE_AMOUNT) INTO V_LOANAMT from thr_empl_loan_dtls d, thr_empl_loan_schdl s, THR_EMPL_SALARY SAL, thr_empl_loanadvance AD
WHERE s.thr_empl_loan_schdl_id=d.thr_empl_loan_schdl_id
AND  d.due_date between v_fromdate and v_todate
AND sAL.THR_Empl_Info_ID=CUR_PARAMETER_EMP.THR_Empl_Info_ID
AND SAL.THR_EMPL_SALARY_ID=AD.THR_EMPL_SALARY_ID
AND AD.thr_empl_loanadvance_ID=S.thr_empl_loanadvance_ID
AND D.STATUS='DR';

UPDATE thr_empl_loan_dtls d SET STATUS='CO'
 from thr_empl_loan_schdl s, THR_EMPL_SALARY SAL, thr_empl_loanadvance AD
WHERE s.thr_empl_loan_schdl_id=d.thr_empl_loan_schdl_id
AND  d.due_date between v_fromdate and v_todate
AND sAL.THR_Empl_Info_ID=CUR_PARAMETER_EMP.THR_Empl_Info_ID
AND SAL.THR_EMPL_SALARY_ID=AD.THR_EMPL_SALARY_ID
AND AD.thr_empl_loanadvance_ID=S.thr_empl_loanadvance_ID
AND D.STATUS='DR';


---------------- Over Time and Over Time Amount ------------

select SUM(over_time), SUM(LATE) INTO V_OTIME , V_LATE from thr_em_attn_proc
WHERE  attendance_date between v_fromdate and v_todate
AND THR_Empl_Info_ID=CUR_PARAMETER_EMP.THR_Empl_Info_ID;

		--IF CUR_PARAMETER_EMP_ITEM.is_fixed='Y' THEN
		V_OTAMT:=COALESCE(V_OTAMT,0)*COALESCE(V_OTIME,0);      
		/*ELSE
		SELECT SUM(AMTPERMONTH) INTO v_combo 
		FROM THR_EMPL_PAY_ITEM as i, thr_empl_salary as s  
		WHERE s.thr_empl_salary_id=i.thr_empl_salary_ID 
		AND category in (
		select category from THR_EMPL_PAYCOMBOLINE 
		where THR_EMPL_PAYCOMBO_ID=CUR_PARAMETER_EMP_ITEM.THR_EMPL_PAYCOMBO_ID)
		and s.THR_EMPL_INFO_ID=CUR_PARAMETER_EMP.THR_EMPL_INFO_ID
		;
		v_combo:=COALESCE(v_combo,0)*COALESCE(CUR_PARAMETER_EMP_ITEM.PERCENTAGE,0)/100;
		V_OTAMT:=COALESCE(V_OTAMT,0)+COALESCE(v_combo,0);
		--v_emp_combo:=COALESCE(v_emp_combo,0)+COALESCE(v_combo,0);

		--V_OTAMT:=COALESCE(V_OTAMT,0)+COALESCE(v_emp_combo,0)*(COALESCE(CUR_PARAMETER_EMP_ITEM.PERCENTAGE,0)/100)*COALESCE(V_OTIME,0);
		END IF;*/



V_DAYSWORKED:=COALESCE(V_MDAYS,0)-COALESCE(V_NOOFWEEKENDS,0)-COALESCE(V_TOT_LOPDAYS,0)-COALESCE(V_NOOFHOLIDAYS,0)-COALESCE(V_LEAVEDAYS,0);


------------Final Paid Amount ----------------------------
V_TOT_PAIDAMT:=COALESCE(V_TOT_PAIDAMT,0)+COALESCE(V_OTAMT,0)-COALESCE(V_TOT_LOPAMT,0)-COALESCE(V_LOANAMT,0);
---------------------
   
UPDATE THR_EMPL_SAL_PERD_EMP
 SET 
 TOT_EARNINGS=COALESCE(V_TOT_EARNINGS,0), 
 EARNINGS=COALESCE(V_TOT_EARNINGS,0)+COALESCE(V_OTAMT,0),
 TOT_DEDUCTIONS=COALESCE(V_TOT_DEDUCTIONS,0)+COALESCE(V_TOT_LOPAMT,0)+COALESCE(V_LOANAMT,0),
 TOT_PAIDAMT=COALESCE(V_TOT_PAIDAMT,0),
 TOT_LOPDAYS=COALESCE(V_LOPDAYS,0),
 TOT_LOPAMT=COALESCE(V_TOT_LOPAMT,0),
 OTAMT=COALESCE(V_OTAMT,0),
 DAYSWORKED=COALESCE(V_DAYSWORKED,0),
 NOOFHOLIDAYS=COALESCE(V_NOOFHOLIDAYS,0),
 LEAVEDAYS=COALESCE(V_LEAVEDAYS,0),
NOOFWEEKENDS=COALESCE(V_NOOFWEEKENDS,0),
LOANAMT=COALESCE(V_LOANAMT,0),
OTIME=COALESCE(V_OTIME,0),
COMPANY_EXPENSES=COALESCE(V_EMP_COMPANY_EXPENSES,0)
WHERE THR_EMPL_SAL_PERD_EMP_ID=V_EMPL_SAL_PERD_EMP_ID;

END LOOP;

ELSIF COALESCE(V_COUNT_EMP,0)>0 THEN

DELETE FROM THR_EMPL_SAL_PERD_ITEM WHERE THR_EMPL_SAL_PERD_EMP_ID IN 
(SELECT THR_EMPL_SAL_PERD_EMP_ID FROM THR_EMPL_SAL_PERD_EMP WHERE 
THR_EMPL_SAL_PERIOD_ID=v_Record_ID);
        
DELETE FROM THR_EMPL_SAL_PERD_EMP WHERE THR_EMPL_SAL_PERIOD_ID=v_Record_ID;


V_EARNINGS :=0;
   V_DEDUCTIONS :=0;
   V_PAIDAMT :=0;
   v_emp_company_expenses:=0;
   v_emp_combo:=0;

FOR CUR_PARAMETER_EMP IN
      (SELECT E.* FROM THR_EMPL_SALARY S, THR_EMPL_INFO E
WHERE S.THR_EMPL_INFO_ID=E.THR_EMPL_INFO_ID 
AND E.DATE_OF_JOINING<=v_todate
AND ((DATE_OF_LEAVING IS NULL) OR E.DATE_OF_LEAVING>v_todate)
AND E.ISACTIVE='Y'
AND S.ISACTIVE='Y'
)
      LOOP

  V_EMPL_SAL_PERD_EMP_ID:=GET_UUID();

INSERT INTO THR_EMPL_SAL_PERD_EMP(
THR_EMPL_SAL_PERD_EMP_ID,AD_CLIENT_ID,AD_ORG_ID,ISACTIVE,
created,createdby,updated,UPDATEDBY,
C_PERIOD_ID,THR_EMPL_INFO_ID,
TOT_EARNINGS,TOT_DEDUCTIONS,TOT_PAIDAMT,TOT_LOPDAYS,TOT_LOPAMT,OTAMT,DAYSWORKED,NOOFHOLIDAYS,LEAVEDAYS,
NOOFWEEKENDS,LOANAMT,OTIME,
THR_EMPL_SAL_PERIOD_ID,EMP_POSITION,EMP_DEPARTMENT, 
earnings,company_expenses ,hourly_amount ,is_hourly
)
VALUES (
V_EMPL_SAL_PERD_EMP_ID,CUR_PARAMETER_EMP.AD_CLIENT_ID,CUR_PARAMETER_EMP.AD_ORG_ID,CUR_PARAMETER_EMP.ISACTIVE,
now(),'100',now(),'100',
V_PERIOD_ID,CUR_PARAMETER_EMP.THR_EMPL_INFO_ID,
V_TOT_EARNINGS,V_TOT_DEDUCTIONS,V_TOT_PAIDAMT,V_TOT_LOPDAYS,V_TOT_LOPAMT,V_OTAMT,V_DAYSWORKED,V_NOOFHOLIDAYS,V_LEAVEDAYS,
V_NOOFWEEKENDS,V_LOANAMT,V_OTIME,
v_Record_ID,CUR_PARAMETER_EMP.THR_EM_DESIGNATION_ID,CUR_PARAMETER_EMP.THR_EM_DEPARTMENT_ID,
V_EARNINGS,v_emp_company_expenses,0,'N');




V_TOT_EARNINGS:=0;
   V_TOT_DEDUCTIONS :=0;
   V_TOT_PAIDAMT :=0;
   v_emp_company_expenses:=0;
   V_LOPDAYS :=0;
   
v_combo :=0;


FOR CUR_PARAMETER_EMP_ITEM IN
(SELECT i.*,s.grossamt FROM THR_EMPL_PAY_ITEM as i, thr_empl_salary as s WHERE 
S.thr_empl_salary_ID=I.thr_empl_salary_ID
AND s.THR_EMPL_INFO_ID=CUR_PARAMETER_EMP.THR_EMPL_INFO_ID) LOOP

V_EMPL_SAL_PERD_ITEM_ID=GET_UUID();
v_combo :=0;

----------Start Addition-------------------
IF CUR_PARAMETER_EMP_ITEM.TYPE='Addition' THEN

	IF CUR_PARAMETER_EMP_ITEM.is_fixed='Y' THEN
		V_TOT_EARNINGS:=COALESCE(V_TOT_EARNINGS,0)+COALESCE(CUR_PARAMETER_EMP_ITEM.AMTPERMONTH,0);
	ELSE
		SELECT SUM(AMTPERMONTH) INTO v_combo 
		FROM THR_EMPL_PAY_ITEM as i, thr_empl_salary as s  
		WHERE s.thr_empl_salary_id=i.thr_empl_salary_ID AND category in (
			select category from THR_EMPL_PAYCOMBOLINE 
			where THR_EMPL_PAYCOMBO_ID=CUR_PARAMETER_EMP_ITEM.THR_EMPL_PAYCOMBO_ID)
		and s.THR_EMPL_INFO_ID=CUR_PARAMETER_EMP.THR_EMPL_INFO_ID
		;




		V_TOT_EARNINGS:=COALESCE(V_TOT_EARNINGS,0)+COALESCE(v_combo,0)*COALESCE(CUR_PARAMETER_EMP_ITEM.PERCENTAGE,0)/100;
		v_emp_combo:=COALESCE(v_emp_combo,0)+COALESCE(v_combo,0);
	END IF;
END IF;

----------Start Deduction-------------------

IF CUR_PARAMETER_EMP_ITEM.TYPE='Deduction' THEN
	IF CUR_PARAMETER_EMP_ITEM.is_fixed='Y' THEN
		V_TOT_DEDUCTIONS:=COALESCE(V_TOT_DEDUCTIONS,0)+COALESCE(CUR_PARAMETER_EMP_ITEM.AMTPERMONTH,0);
	ELSE

		SELECT SUM(AMTPERMONTH) INTO v_combo 
		FROM THR_EMPL_PAY_ITEM as i, thr_empl_salary as s  
		WHERE s.thr_empl_salary_id=i.thr_empl_salary_ID AND category in (
			select category from THR_EMPL_PAYCOMBOLINE 
			where THR_EMPL_PAYCOMBO_ID=CUR_PARAMETER_EMP_ITEM.THR_EMPL_PAYCOMBO_ID)
			and s.THR_EMPL_INFO_ID=CUR_PARAMETER_EMP.THR_EMPL_INFO_ID
			;
			
		v_combo:=COALESCE(v_combo,0)*COALESCE(CUR_PARAMETER_EMP_ITEM.PERCENTAGE,0)/100;
		V_TOT_DEDUCTIONS:=COALESCE(V_TOT_DEDUCTIONS,0)+COALESCE(v_combo,0);
		v_emp_combo:=COALESCE(v_emp_combo,0)+COALESCE(v_combo,0);
		
	END IF;

END IF;
----------End Deduction-------------------
----------Start Company_Expenses-------------------
IF CUR_PARAMETER_EMP_ITEM.TYPE='Company_Expenses' THEN
	IF CUR_PARAMETER_EMP_ITEM.is_fixed='Y' THEN
		v_emp_company_expenses:=COALESCE(v_emp_company_expenses,0)+COALESCE(CUR_PARAMETER_EMP_ITEM.AMTPERMONTH,0);
	ELSE
		SELECT SUM(AMTPERMONTH) INTO v_combo 
		FROM THR_EMPL_PAY_ITEM as i, thr_empl_salary as s  
		WHERE s.thr_empl_salary_id=i.thr_empl_salary_ID 
		AND category in (
		select category from THR_EMPL_PAYCOMBOLINE 
		where THR_EMPL_PAYCOMBO_ID=CUR_PARAMETER_EMP_ITEM.THR_EMPL_PAYCOMBO_ID)
		and s.THR_EMPL_INFO_ID=CUR_PARAMETER_EMP.THR_EMPL_INFO_ID
		;
		
		
		v_combo:=COALESCE(v_combo,0)*COALESCE(CUR_PARAMETER_EMP_ITEM.PERCENTAGE,0)/100;
		v_emp_company_expenses:=COALESCE(v_emp_company_expenses,0)+COALESCE(v_combo,0);
		v_emp_combo:=COALESCE(v_emp_combo,0)+COALESCE(v_combo,0);
	
	END IF;

END IF;
----------End Company_Expenses-------------------

--- Start -- Hourly--------------
IF CUR_PARAMETER_EMP_ITEM.TYPE='Hourly' THEN

	IF CUR_PARAMETER_EMP_ITEM.is_fixed='Y' THEN
		V_OTAMT:=COALESCE(V_OTAMT,0)+COALESCE(CUR_PARAMETER_EMP_ITEM.AMTPERMONTH,0);
	ELSE

		SELECT SUM(AMTPERMONTH) INTO v_combo FROM THR_EMPL_PAY_ITEM as i WHERE category in (
		select category from THR_EMPL_PAYCOMBOLINE where THR_EMPL_PAYCOMBO_ID=CUR_PARAMETER_EMP_ITEM.THR_EMPL_PAYCOMBO_ID);

		V_OTAMT:=COALESCE(V_OTAMT,0)+COALESCE(v_combo,0)*COALESCE(CUR_PARAMETER_EMP_ITEM.PERCENTAGE,0)/100;
	END IF;
	   ---------------- Over Time and Over Time Amount ------------

		select SUM(over_time), SUM(LATE) INTO V_OTIME , V_LATE from thr_em_attn_proc
		WHERE attendance_date between v_fromdate and v_todate
		AND THR_Empl_Info_ID=CUR_PARAMETER_EMP.THR_Empl_Info_ID;
	-----------------------------------------------------------


END IF;

IF COALESCE(V_OTIME,0)=0 THEN
V_OTIME:=1;
END IF;

--- End -- Hourly--------------
V_AMTPERMONTH:=v_combo;
if COALESCE(v_combo,0)=0 THEN
V_AMTPERMONTH:=CUR_PARAMETER_EMP_ITEM.AMTPERMONTH;
END IF;
INSERT INTO THR_EMPL_SAL_PERD_ITEM(
THR_EMPL_SAL_PERD_ITEM_ID,AD_CLIENT_ID,AD_ORG_ID,ISACTIVE,THR_EMPL_SAL_PERD_EMP_ID,AMTPERMONTH,THR_EMPL_PAY_ITEM_ID,createdby, UPDATEDBY)
VALUES (
V_EMPL_SAL_PERD_ITEM_ID,CUR_PARAMETER_EMP.AD_CLIENT_ID,CUR_PARAMETER_EMP.AD_ORG_ID,CUR_PARAMETER_EMP.ISACTIVE,V_EMPL_SAL_PERD_EMP_ID,COALESCE(V_AMTPERMONTH,0)*COALESCE(V_OTIME,1),CUR_PARAMETER_EMP_ITEM.THR_EMPL_PAY_ITEM_ID,'100','100');

V_OTIME:=0;
V_LATE :=0;
END LOOP;

V_TOT_PAIDAMT:=COALESCE(V_TOT_EARNINGS,0)-COALESCE(V_TOT_DEDUCTIONS,0);

V_EARNINGS:=COALESCE(V_EARNINGS,0)+COALESCE(V_TOT_EARNINGS,0);

V_DEDUCTIONS:=COALESCE(V_DEDUCTIONS,0)+COALESCE(V_TOT_DEDUCTIONS,0);
---------------------_Calculate LOP Amount -------------------- Start --------------


select COUNT(a.*) 
INTO V_LOPDAYS 
FROM thr_empl_lv_appr a, thr_empl_leave_type t
WHERE a.thr_empl_leave_type_id=t.thr_empl_leave_type_id
AND a.leavedate between v_fromdate and v_todate
AND T.SHORT_NAME='LOP'
AND a.THR_Empl_Info_ID=CUR_PARAMETER_EMP.THR_Empl_Info_ID;


		IF CUR_PARAMETER_EMP_ITEM.is_fixed='Y' THEN
		V_TOT_LOPAMT:=(COALESCE(V_TOT_EARNINGS,0)*COALESCE(V_LOPDAYS,0))/COALESCE(v_mdays,1);
		ELSE
		SELECT SUM(AMTPERMONTH) INTO v_combo FROM THR_EMPL_PAY_ITEM as i WHERE category in (
		select category from THR_EMPL_PAYCOMBOLINE where THR_EMPL_PAYCOMBO_ID=CUR_PARAMETER_EMP_ITEM.THR_EMPL_PAYCOMBO_ID);

		V_TOT_LOPAMT:=COALESCE(V_TOT_LOPAMT,0)+COALESCE(v_combo,0)*(COALESCE(CUR_PARAMETER_EMP_ITEM.PERCENTAGE,0)/100);
		END IF;

---------------------_Calculate LOP Amount -------------------- End --------------






------------------Leave Days -------------------------------

select COUNT(1) 
INTO V_LEAVEDAYS 
FROM thr_empl_lv_appr a, thr_empl_leave_type t
WHERE a.thr_empl_leave_type_id=t.thr_empl_leave_type_id
AND a.leavedate between v_fromdate and v_todate
AND T.SHORT_NAME<>'LOP'
AND a.THR_Empl_Info_ID=CUR_PARAMETER_EMP.THR_Empl_Info_ID;

-------------Loan Schedule ----------------------------------
select SUM(D.DUE_AMOUNT) INTO V_LOANAMT from thr_empl_loan_dtls d, thr_empl_loan_schdl s, THR_EMPL_SALARY SAL, thr_empl_loanadvance AD
WHERE s.thr_empl_loan_schdl_id=d.thr_empl_loan_schdl_id
AND d.due_date between v_fromdate and v_todate
AND sAL.THR_Empl_Info_ID=CUR_PARAMETER_EMP.THR_Empl_Info_ID
AND SAL.THR_EMPL_SALARY_ID=AD.THR_EMPL_SALARY_ID
AND AD.thr_empl_loanadvance_ID=S.thr_empl_loanadvance_ID;

---------------- Over Time and Over Time Amount ------------

select SUM(over_time), SUM(LATE) INTO V_OTIME , V_LATE from thr_em_attn_proc
WHERE attendance_date between v_fromdate and v_todate
AND THR_Empl_Info_ID=CUR_PARAMETER_EMP.THR_Empl_Info_ID;

		IF CUR_PARAMETER_EMP_ITEM.is_fixed='Y' THEN
		V_OTAMT:=COALESCE(V_OTAMT,0)*COALESCE(V_OTIME,0);
		SELECT SUM(AMTPERMONTH) INTO v_combo FROM THR_EMPL_PAY_ITEM as i WHERE category in (
		select category from THR_EMPL_PAYCOMBOLINE where THR_EMPL_PAYCOMBO_ID=CUR_PARAMETER_EMP_ITEM.THR_EMPL_PAYCOMBO_ID);

		V_OTAMT:=COALESCE(V_OTAMT,0)+COALESCE(v_emp_combo,0)*(COALESCE(CUR_PARAMETER_EMP_ITEM.PERCENTAGE,0)/100)*COALESCE(V_OTIME,0);
		END IF;



V_DAYSWORKED:=COALESCE(V_MDAYS,0)-COALESCE(V_NOOFWEEKENDS,0)-COALESCE(V_TOT_LOPDAYS,0)-COALESCE(V_NOOFHOLIDAYS,0)-COALESCE(V_LEAVEDAYS,0);


------------Final Paid Amount ----------------------------
V_TOT_PAIDAMT:=COALESCE(V_TOT_PAIDAMT,0)+COALESCE(V_OTAMT,0)-COALESCE(V_TOT_LOPAMT,0)-COALESCE(V_LOANAMT,0);
---------------------
   
UPDATE THR_EMPL_SAL_PERD_EMP
 SET 
 TOT_EARNINGS=COALESCE(V_TOT_EARNINGS,0), 
 EARNINGS=COALESCE(V_TOT_EARNINGS,0)+COALESCE(V_OTAMT,0),
 TOT_DEDUCTIONS=COALESCE(V_TOT_DEDUCTIONS,0)+COALESCE(V_TOT_LOPAMT,0)+COALESCE(V_LOANAMT,0),
 TOT_PAIDAMT=COALESCE(V_TOT_PAIDAMT,0),
 TOT_LOPDAYS=COALESCE(V_LOPDAYS,0),
 TOT_LOPAMT=COALESCE(V_TOT_LOPAMT,0),
 OTAMT=COALESCE(V_OTAMT,0),
 DAYSWORKED=COALESCE(V_DAYSWORKED,0),
 NOOFHOLIDAYS=COALESCE(V_NOOFHOLIDAYS,0),
 LEAVEDAYS=COALESCE(V_LEAVEDAYS,0),
NOOFWEEKENDS=COALESCE(V_NOOFWEEKENDS,0),
LOANAMT=COALESCE(V_LOANAMT,0),
OTIME=COALESCE(V_OTIME,0),
COMPANY_EXPENSES=COALESCE(V_EMP_COMPANY_EXPENSES,0)
WHERE THR_EMPL_SAL_PERD_EMP_ID=V_EMPL_SAL_PERD_EMP_ID;


--test
END LOOP;

END IF; -- Employee Count
 AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
EXCEPTION
WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('M_RequisitionLine_Post error: ' || v_ResultStr);
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr);
END THR_SALARYPROCESS
]]></body>
    </function>
  </database>
