<?xml version="1.0"?>
  <database name="FUNCTION THR_BULKEMAIL_PROCESS">
    <function name="THR_BULKEMAIL_PROCESS" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2001-2013 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  -- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Result NUMBER:=1; -- 0=failure
  v_Record_ID VARCHAR2(32);
  v_AD_User_ID VARCHAR2(32):='0';
  v_PROCESSED VARCHAR2(60):='N';
  v_POSTED VARCHAR2(60):='Y';
  v_is_included NUMBER:=0;
  v_AD_Org_ID VARCHAR2(32);
  v_date DATE;
  v_available_period NUMBER:=0; 
  v_is_ready AD_Org.IsReady%TYPE;
  v_is_tr_allow AD_OrgType.IsTransactionsAllowed%TYPE;
  v_isacctle AD_OrgType.IsAcctLegalEntity%TYPE;
  v_org_bule_id AD_Org.AD_Org_ID%TYPE;
  v_client_id ad_client.ad_client_id%TYPE;
  v_org_id ad_org.ad_org_id%TYPE;
  v_sms_text thr_bulk_sms.sms_text%TYPE;
  
  FINISH_PROCESS BOOLEAN DEFAULT FALSE;
  --  Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    Cur_contact RECORD;
 
  BEGIN
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID, i.AD_User_ID, p.ParameterName, p.P_String, p.P_Number, p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_AD_User_ID:=Cur_Parameter.AD_User_ID;
    END LOOP; -- Get Parameter

        select ad_client_id,ad_org_id,sms_text 
    into v_client_id,v_org_id,v_sms_text 
      from thr_bulk_sms 
    where thr_bulk_sms_id=v_Record_ID;
    
 FOR Cur_contact IN
 (select u.ad_user_id, u.phone, u.phone2  
 from ad_user u, 
 thr_bulk_sms_line sl, thr_contact_group cg, thr_group_contact gc
 where u.ad_user_id=gc.ad_user_id
 and sl.thr_contact_group_id=cg.thr_contact_group_id
 and cg.thr_contact_group_id=gc.thr_contact_group_id
 and sl.thr_bulk_sms_id=v_Record_ID)
 LOOP
 
if Cur_contact.phone is not null then
insert into thr_sms (thr_sms_id,ad_client_id,ad_org_id,isactive,created,createdby,updated,updatedby,sms_text, send_to)
values (get_uuid(),v_client_id, v_org_id, 'Y', now(),'0',now(),'0', v_sms_text, Cur_contact.phone);
end if;

if Cur_contact.phone2 is not null then

insert into thr_sms (thr_sms_id,ad_client_id,ad_org_id,isactive,created,createdby,updated,updatedby,sms_text, send_to)
values (get_uuid(),v_client_id, v_org_id, 'Y', now(),'0',now(),'0', v_sms_text, Cur_contact.phone2);

end if;

END LOOP;

    --<<FINISH_PROCESS>>
    IF(p_PInstance_ID IS NOT NULL) THEN
      --  Update AD_PInstance
      DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
      AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
    ELSE
      DBMS_OUTPUT.PUT_LINE('Finished ' || v_Message) ;
    END IF;
    -- Commented by cromero 19102006 COMMIT;
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  IF(p_PInstance_ID IS NOT NULL) THEN
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  END IF;
--  RAISE_APPLICATION_ERROR(-20100, v_ResultStr) ;
--  RETURN;
END THR_BULKEMAIL_PROCESS
]]></body>
    </function>
  </database>
